<EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div>
        <label class="control-label">Type:</label>
        <select class="form-control" @bind="@model.Type">
            @foreach (Enums.PartType t in Enum.GetValues(typeof(Enums.PartType)))
            {
                <option>@t</option>
            }
        </select>
        <ValidationMessage For="(() => model.Type)" />
    </div>
    <div>
        <label class="control-label">Description:</label>
        <InputTextArea class="form-con-lg" @bind-Value="@model.Description" placeholder="Description" />
        <ValidationMessage For="(() => model.Description)" />
    </div>
    <div>
        <label class="control-label">Brand:</label>
        <InputText class="form-control" @bind-Value="@model.Brand" placeholder="Brand" />
        <ValidationMessage For="(() => model.Brand)" />
    </div>

    <div>
        <label class="control-label">Capacity:</label>
        <InputTextArea class="form-con-lg" @bind-Value="@model.Capacity" placeholder="Capacity" />
        <ValidationMessage For="(() => model.Capacity)" />
    </div>

    <button class="btn btn-success m-3" type="submit">@buttonText</button>
    <button @onclick="OnCancelClick" class="btn btn-danger m-3">Cancel</button>
    @*<button @onclick="OnDeleteClick" class="btn btn-danger m-3">Delete Record</button>*@
</EditForm>

@code {
    [Parameter] public PartModel model { get; set; }
    [Parameter] public string buttonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnCancelClick { get; set; }
    //[Parameter] public EventCallback OnDeleteClick { get; set; }

}
